name: GitHub-Profile-3D-Contrib
# Generates multiple styles of 3D GitHub contribution charts
# and updates README automatically with dynamic date display.

on:
  schedule:
    - cron: "0 10 * * *"  # Every day at 10:00 UTC (fixed the cron syntax)
  workflow_dispatch:
  push:
    branches: [ main ]  # Also run on push to main branch

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    name: generate-github-profile-3d-contrib
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        
      - name: Set up timezone and get current date
        run: |
          # Set timezone (adjust to your preference)
          export TZ='America/New_York'
          
          # Generate various date formats
          echo "CURRENT_DATE=$(date +'%Y-%m-%d')" >> $GITHUB_ENV
          echo "CURRENT_TIME=$(date +'%H:%M:%S')" >> $GITHUB_ENV
          echo "CURRENT_DATETIME=$(date +'%Y-%m-%d %H:%M:%S')" >> $GITHUB_ENV
          echo "FRIENDLY_DATE=$(date +'%B %d, %Y')" >> $GITHUB_ENV
          echo "WEEKDAY=$(date +'%A')" >> $GITHUB_ENV
          echo "MONTH=$(date +'%B')" >> $GITHUB_ENV
          echo "YEAR=$(date +'%Y')" >> $GITHUB_ENV
          echo "ISO_DATE=$(date -u +%Y-%m-%dT%H:%M:%SZ)" >> $GITHUB_ENV
          
          # Display current date info
          echo "üïê Current Date: $(date +'%Y-%m-%d')"
          echo "üåç Current Time: $(date +'%H:%M:%S %Z')"
          echo "üìÖ Friendly Format: $(date +'%A, %B %d, %Y')"

      - name: Generate 3D Contribution Charts (Main Style)
        uses: yoshi389111/github-profile-3d-contrib@0.7.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          USERNAME: ${{ github.repository_owner }}

      - name: Generate Night View Style
        uses: yoshi389111/github-profile-3d-contrib@0.7.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          USERNAME: ${{ github.repository_owner }}
          SETTING_JSON: |
            {
              "type": "normal",
              "color_theme": "dark",
              "background_color": "#0d1117",
              "foreground_color": "#ffffff",
              "strong_color": "#79c0ff",
              "weak_color": "#363636"
            }

      - name: Generate Rainbow Style  
        uses: yoshi389111/github-profile-3d-contrib@0.7.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          USERNAME: ${{ github.repository_owner }}
          SETTING_JSON: |
            {
              "type": "rainbow",
              "color_theme": "rainbow"
            }

      - name: Optimize SVG files
        run: |
          # Install SVGO for SVG optimization
          sudo apt-get update && sudo apt-get install -y npm
          sudo npm install -g svgo
          
          # Optimize all SVG files
          if [ -d "profile-3d-contrib" ]; then
            svgo -f profile-3d-contrib --multipass
            echo "‚úÖ SVG files optimized"
          else
            echo "‚ö†Ô∏è No SVG files found to optimize"
          fi

      - name: Update README with dynamic content
        run: |
          # Create dynamic content for README
          CHART_PATH="./profile-3d-contrib/profile-green-animate.svg"
          NIGHT_CHART_PATH="./profile-3d-contrib/profile-night-view.svg"
          RAINBOW_CHART_PATH="./profile-3d-contrib/profile-rainbow.svg"
          
          # Create or update a section in README.md with current date
          if [ -f README.md ]; then
            # Update existing README with dynamic date section
            cat << EOF > temp_section.md
          
          ## üìä 3D GitHub Contribution Charts
          
          **Last Updated:** ${{ env.FRIENDLY_DATE }} at ${{ env.CURRENT_TIME }} UTC  
          **Auto-generated on:** ${{ env.WEEKDAY }}  
          **Data as of:** ${{ env.ISO_DATE }}
          
          ### üåü Main Contribution Chart
          ![3D GitHub Profile](${CHART_PATH})
          
          <details>
          <summary>üé® View Alternative Styles</summary>
          
          ### üåô Night Theme
          ![3D GitHub Profile Night](${NIGHT_CHART_PATH})
          
          ### üåà Rainbow Theme  
          ![3D GitHub Profile Rainbow](${RAINBOW_CHART_PATH})
          
          </details>
          
          ---
          
          EOF
            
            # Remove old 3D section if exists and add new one
            sed -i '/## üìä 3D GitHub Contribution Charts/,/^---$/d' README.md
            cat temp_section.md >> README.md
            rm temp_section.md
            
            echo "‚úÖ README.md updated with current date: ${{ env.FRIENDLY_DATE }}"
          else
            echo "‚ö†Ô∏è README.md not found"
          fi

      - name: Create status badge
        run: |
          # Create a simple status indicator
          echo "![Last Updated](https://img.shields.io/badge/Last%20Updated-${{ env.CURRENT_DATE }}-brightgreen?style=flat-square)" > last_updated_badge.md
          echo "![Status](https://img.shields.io/badge/3D%20Charts-Active-success?style=flat-square)" >> last_updated_badge.md

      - name: Commit & Push changes
        run: |
          # Configure git
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          # Add all changes
          git add -A
          
          # Check if there are changes to commit
          if git diff --staged --quiet; then
            echo "üìù No changes to commit"
          else
            # Commit with dynamic message
            git commit -m "üñº Update 3D GitHub Charts & Date Info
            
            üìÖ Updated on: ${{ env.FRIENDLY_DATE }}
            üïê Time: ${{ env.CURRENT_TIME }} UTC
            üåç Day: ${{ env.WEEKDAY }}
            ü§ñ Auto-generated by GitHub Actions
            
            Changes:
            - Updated 3D contribution charts
            - Refreshed date information
            - Optimized SVG files"
            
            # Push changes
            git push
            
            echo "‚úÖ Changes committed and pushed successfully!"
            echo "üìä Updated on ${{ env.FRIENDLY_DATE }} at ${{ env.CURRENT_TIME }}"
          fi

      - name: Generate Summary Report
        run: |
          echo "# üìä 3D GitHub Profile Update Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## ‚úÖ Update Details" >> $GITHUB_STEP_SUMMARY
          echo "- **Date:** ${{ env.FRIENDLY_DATE }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Time:** ${{ env.CURRENT_TIME }} UTC" >> $GITHUB_STEP_SUMMARY
          echo "- **Day:** ${{ env.WEEKDAY }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Repository:** ${{ github.repository }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## üéØ Actions Completed" >> $GITHUB_STEP_SUMMARY
          echo "- [x] Generated main 3D contribution chart" >> $GITHUB_STEP_SUMMARY
          echo "- [x] Generated night theme variant" >> $GITHUB_STEP_SUMMARY
          echo "- [x] Generated rainbow theme variant" >> $GITHUB_STEP_SUMMARY
          echo "- [x] Optimized SVG files" >> $GITHUB_STEP_SUMMARY
          echo "- [x] Updated README with current date" >> $GITHUB_STEP_SUMMARY
          echo "- [x] Committed changes to repository" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## üìà Next Update" >> $GITHUB_STEP_SUMMARY
          echo "The next automatic update will run tomorrow at 10:00 UTC" >> $GITHUB_STEP_SUMMARY
          
      - name: Create performance metrics
        run: |
          echo "üìä Workflow Performance:" 
          echo "‚è±Ô∏è  Total runtime: $SECONDS seconds"
          echo "üîÑ Charts generated: 3 styles"
          echo "üìÖ Last update: ${{ env.ISO_DATE }}"
